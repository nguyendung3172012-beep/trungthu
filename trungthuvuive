<!doctype html>
<html lang="vi">
<head>
  <meta charset="utf-8">
  <title>Trung Thu Vui V·∫ª Ch·ªã Iu</title>
  <style>
    body { margin:0; background:#000; overflow:hidden; }
    canvas { display:block; }

    /* M·∫∑t trƒÉng */
    .moon {
      position: absolute;
      top: 40px; right: 80px;
      width: 160px; height: 160px;
      border-radius: 50%;
      background: radial-gradient(circle at 30% 30%, #fff, #f8e08e 70%);
      box-shadow: 0 0 60px rgba(255,255,200,0.9), 0 0 120px rgba(255,255,180,0.5);
    }

    /* Th√†nh ph·ªë */
    .city {
      position:absolute;
      bottom:0; left:0; width:100%; height:50%;
      background:transparent;
      display:flex;
      align-items:flex-end;
    }
    .building {
      position:relative;
      margin:0 3px;
      background:#111;
      flex:1;
      box-shadow: 0 0 20px rgba(255,255,100,0.2) inset;
    }
    .window {
      width:10px; height:10px;
      margin:2px;
      background:rgba(255,255,100,0.9);
      display:inline-block;
      box-shadow: 0 0 6px rgba(255,255,150,0.8);
    }

    /* ƒê√®n l·ªìng */
    .lantern {
      position:absolute;
      width:40px; height:60px;
      border-radius:20px;
      background: radial-gradient(circle at 30% 30%, #ff7a7a, #ff3333 70%);
      box-shadow: 0 0 20px rgba(255,150,100,0.8), 0 0 40px rgba(255,100,50,0.6);
      animation: floatUpSway linear forwards;
    }
    .lantern::after {
      content:''; position:absolute;
      bottom:-12px; left:50%; transform:translateX(-50%);
      width:4px; height:14px; border-radius:2px; background:#333;
    }
    @keyframes floatUpSway {
      0%   { transform: translate(0,0) rotate(-3deg); opacity:1; }
      25%  { transform: translate(12px,-30vh) rotate(3deg); opacity:0.9; }
      50%  { transform: translate(-12px,-60vh) rotate(-3deg); opacity:0.7; }
      75%  { transform: translate(10px,-90vh) rotate(3deg); opacity:0.5; }
      100% { transform: translate(0,-130vh) rotate(-3deg); opacity:0; }
    }

    .controls {
      position:absolute; top:10px; left:10px;
      color:white; font-size:14px;
      background:rgba(0,0,0,0.5); padding:6px 12px; border-radius:6px;
      user-select:none;
    }
  </style>
</head>
<body>
  <div class="moon"></div>
  <canvas id="canvas"></canvas>
  <div class="city" id="city"></div>

  <!-- Nh·∫°c n·ªÅn autoplay -->
  <audio id="music" src="china-joyful-life-nhac-nen-cho-vlog-editor-212662.mp3" autoplay loop></audio>
  <div class="controls">Click v√†o m√†n h√¨nh ƒë·ªÉ b·∫Øn ph√°o hoa üéÜ</div>

  <script>
    const canvas = document.getElementById("canvas");
    const ctx = canvas.getContext("2d");
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    let particles = [];
    let rockets = [];
    let stars = [];

    // V·∫Ω sao
    for (let i=0;i<200;i++){
      stars.push({x:Math.random()*canvas.width, y:Math.random()*canvas.height/2, r:Math.random()*1.5});
    }

    // H√†m t·∫°o ch·ªØ th√†nh particle
    function createTextParticles(text, originX, originY) {
      const textCanvas = document.createElement("canvas");
      const tctx = textCanvas.getContext("2d");
      textCanvas.width = canvas.width;
      textCanvas.height = canvas.height;
      tctx.fillStyle="#fff";
      tctx.font="bold 80px sans-serif";
      tctx.textAlign="center";
      tctx.fillText(text, canvas.width/2, canvas.height/2);
      let imgData = tctx.getImageData(0,0,canvas.width,canvas.height);

      let arr = [];
      for (let y=0; y<imgData.height; y+=6){
        for (let x=0; x<imgData.width; x+=6){
          let idx = (y*imgData.width + x)*4;
          if (imgData.data[idx+3] > 128) {
            arr.push({
              x: originX, y: originY,
              vx: (x - originX)/40,
              vy: (y - originY)/40,
              life:100
            });
          }
        }
      }
      return arr;
    }

    // B·∫Øn ph√°o hoa khi click
    canvas.addEventListener("click", e => {
      rockets.push({
        x: e.clientX,
        y: canvas.height,
        vy: -5, // bay ch·∫≠m
        stage: "fly",
        text: "TRUNG THU VUI V·∫∫ CH·ªä IU",
        timer:0,
        trail:[]
      });
    });

    // Animation
    function animate(){
      ctx.fillStyle = "rgba(0,0,0,0.2)";
      ctx.fillRect(0,0,canvas.width,canvas.height);

      // Sao nh·∫•p nh√°y
      stars.forEach(s=>{
        ctx.fillStyle = "rgba(255,255,255,"+(0.5+Math.random()*0.5)+")";
        ctx.beginPath();
        ctx.arc(s.x,s.y,s.r,0,Math.PI*2);
        ctx.fill();
      });

      for (let i = rockets.length-1; i >= 0; i--) {
        let r = rockets[i];
        if (r.stage === "fly") {
          // ƒëu√¥i s√°ng
          r.trail.push({x:r.x,y:r.y,life:20});
          if (r.trail.length>20) r.trail.shift();
          r.trail.forEach(t=>{
            ctx.fillStyle = "rgba(255,200,100,"+(t.life/20)+")";
            ctx.beginPath();
            ctx.arc(t.x,t.y,2,0,Math.PI*2);
            ctx.fill();
            t.life--;
          });

          // rocket
          ctx.fillStyle = "orange";
          ctx.beginPath();
          ctx.arc(r.x, r.y, 4, 0, Math.PI*2);
          ctx.fill();
          r.y += r.vy;
          if (r.y < canvas.height/2) {
            r.stage = "explode";
            particles = createTextParticles(r.text, r.x, r.y);
          }
        } else if (r.stage === "explode") {
          particles.forEach(p => {
            p.x += p.vx;
            p.y += p.vy;
            p.life--;
            if (p.life>0){
              let grd = ctx.createRadialGradient(p.x,p.y,0,p.x,p.y,6);
              grd.addColorStop(0,"rgba(255,255,200,1)");
              grd.addColorStop(1,"rgba(255,0,100,0)");
              ctx.fillStyle = grd;
              ctx.beginPath();
              ctx.arc(p.x, p.y, 3, 0, Math.PI*2);
              ctx.fill();
            }
          });
          r.timer++;
          if (r.timer > 120) {
            rockets.splice(i,1);
          }
        }
      }
      requestAnimationFrame(animate);
    }
    animate();

    // ƒê√®n l·ªìng
    function createLantern(){
      const lantern = document.createElement("div");
      lantern.className = "lantern";
      lantern.style.left = Math.random()*95 + "%";
      lantern.style.bottom = "-80px";
      let colors = ['#ff7a7a','#ffd166','#9ad0ff','#ff9af5','#ffa94d'];
      let c = colors[Math.floor(Math.random()*colors.length)];
      lantern.style.background = `radial-gradient(circle at 30% 30%,${c},#400)`;
      lantern.style.animationDuration = (6 + Math.random()*3) + "s";
      document.body.appendChild(lantern);
      setTimeout(() => lantern.remove(), 12000);
    }
    setInterval(createLantern, 250);

    // Th√†nh ph·ªë
    const city = document.getElementById("city");
    for (let i = 0; i < 20; i++){
      let b = document.createElement("div");
      b.className = "building";
      let h = (canvas.height / 2) * (0.4 + Math.random()*0.6);
      b.style.height = h + "px";
      for (let y = 0; y < h; y += 14){
        for (let x = 0; x < Math.floor(Math.random()*4)+2; x++){
          if (Math.random() > 0.7) {
            let w = document.createElement("div");
            w.className = "window";
            b.appendChild(w);
          }
        }
      }
      city.appendChild(b);
    }

    // Nh·∫°c n·ªÅn autoplay
    const music = document.getElementById("music");
    music.volume = 0.7;
    function tryPlay(){
      music.play().catch(()=>{});
      document.removeEventListener("click", tryPlay);
      document.removeEventListener("mousemove", tryPlay);
    }
    document.addEventListener("click", tryPlay);
    document.addEventListener("mousemove", tryPlay);

    window.onresize = () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    };
  </script>
</body>
</html>
